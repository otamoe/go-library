// protoc --gogofaster_out=plugins=grpc:. *.proto
syntax = "proto3";

package libraftpb;


enum UpdateRequestAction {
    NONE = 0;
    CREATE = 1;
    UPDATE = 2;
    DELETE = 3;
}


// 需要响应的字段 字段
message ResponseField {
    // 响应 key
    bool key = 1;

    // 响应 value
    bool value = 2;

    // 响应 过期时间
    bool expire = 3;
}


// item
message Item {
    // key 字段
    bytes key = 1;
    
    // value 字段
    bytes value = 2;
    
    // 过期时间
    uint64 expire = 3;
}

// items
message ResponseData {
    repeated Item items = 1;
}
 

// 结果
message Response {
    // 结果数据
    repeated ResponseData data = 1;

    // 错误定位  -2 是无错误 -1 是系统错误 否则就是 某个 entry 错误
    int32 index = 98;

    // 错误信息
    string error = 99;
}


// 条件
message Condition {
    // 前缀
    bytes prefix = 1;
    
    // 包含
    bytes contains = 2;
    
    // 结束
    bytes suffix = 3;

    // eq 等于 in 数组 key 有此条件 只查询此条件 其他不会被过滤
    repeated bytes eq = 4;
    
    // ne 不等于 in 数组
    repeated bytes ne = 5;
    
    // 开始
    bytes st = 6;
    
    // 结束
    bytes ed = 7;
}


// 查询
message Query {
    // key 条件
    Condition key = 1;

    // value 条件
    Condition value = 2;

    // 反响
    bool reverse = 49;

    // 限制 数量
    uint32 limit = 50;
}



// 查找
message LookupRequest {
    // 查询
    repeated LookupRequestEntry entrys = 1;

    // 需要响应的字段
    ResponseField response = 2;

    int32 ttl = 90;
}


// 查找 键入
message LookupRequestEntry {
    // 查询
    Query query = 1;
}
 

// 更新
message UpdateRequest {
    // 更新 键入
    repeated UpdateRequestEntry entrys = 1;

    // 需要响应的字段
    ResponseField response = 2;

    int32 ttl = 90;
}

// 更新键入
message UpdateRequestEntry {
    // 查询
    Query query = 1;
    
    // 写入 key 留空 就是 查找到的 key
    bytes key = 2;

    // 写入 value 留空 就是 查找到的 value
    bytes value = 3;

    // 写入 expire 留空 就是 查找到的 expire  1 就是删除  math.MaxUint64 就是不过期
    uint64 expire = 4;

    // 更新动作
    UpdateRequestAction action = 5;
}

 







// The greeting service definition.
service Raft {
	// Sends a greeting
	rpc Lookup (stream LookupRequest) returns (stream Response) {}
	rpc Update (stream UpdateRequest) returns (stream Response) {}
}
